@import "normalize.css";

*,
*:after,
*:before {
	box-sizing: border-box;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family: monospace;
}

.calculator {
	counter-reset: digit-one 0 digit-two 0 output 0;
}

/* This is rough... But a set per each move... Ugh.... */
[data-move="0"]:has(:checked:nth-of-type(1)) ~  .results { --value-0: 0; }
[data-move="0"]:has(:checked:nth-of-type(2)) ~  .results { --value-0: 1; }
[data-move="0"]:has(:checked:nth-of-type(3)) ~  .results { --value-0: 2; }
[data-move="0"]:has(:checked:nth-of-type(4)) ~  .results { --value-0: 3; }
[data-move="0"]:has(:checked:nth-of-type(5)) ~  .results { --value-0: 4; }
[data-move="0"]:has(:checked:nth-of-type(6)) ~  .results { --value-0: 5; }
[data-move="0"]:has(:checked:nth-of-type(7)) ~  .results { --value-0: 6; }
[data-move="0"]:has(:checked:nth-of-type(8)) ~  .results { --value-0: 7; }
[data-move="0"]:has(:checked:nth-of-type(9)) ~  .results { --value-0: 8; }
[data-move="0"]:has(:checked:nth-of-type(10)) ~ .results { --value-0: 9; }

[data-move="1"]:has(:checked:nth-of-type(1)) ~  .results { --value-1: 0; }
[data-move="1"]:has(:checked:nth-of-type(2)) ~  .results { --value-1: 1; }
[data-move="1"]:has(:checked:nth-of-type(3)) ~  .results { --value-1: 2; }
[data-move="1"]:has(:checked:nth-of-type(4)) ~  .results { --value-1: 3; }
[data-move="1"]:has(:checked:nth-of-type(5)) ~  .results { --value-1: 4; }
[data-move="1"]:has(:checked:nth-of-type(6)) ~  .results { --value-1: 5; }
[data-move="1"]:has(:checked:nth-of-type(7)) ~  .results { --value-1: 6; }
[data-move="1"]:has(:checked:nth-of-type(8)) ~  .results { --value-1: 7; }
[data-move="1"]:has(:checked:nth-of-type(9)) ~  .results { --value-1: 8; }
[data-move="1"]:has(:checked:nth-of-type(10)) ~ .results { --value-1: 9; }

[data-move="2"]:has(:checked:nth-of-type(1)) ~  .results { --value-2: 0; }
[data-move="2"]:has(:checked:nth-of-type(2)) ~  .results { --value-2: 1; }
[data-move="2"]:has(:checked:nth-of-type(3)) ~  .results { --value-2: 2; }
[data-move="2"]:has(:checked:nth-of-type(4)) ~  .results { --value-2: 3; }
[data-move="2"]:has(:checked:nth-of-type(5)) ~  .results { --value-2: 4; }
[data-move="2"]:has(:checked:nth-of-type(6)) ~  .results { --value-2: 5; }
[data-move="2"]:has(:checked:nth-of-type(7)) ~  .results { --value-2: 6; }
[data-move="2"]:has(:checked:nth-of-type(8)) ~  .results { --value-2: 7; }
[data-move="2"]:has(:checked:nth-of-type(9)) ~  .results { --value-2: 8; }
[data-move="2"]:has(:checked:nth-of-type(10)) ~ .results { --value-2: 9; }

[data-move="3"]:has(:checked:nth-of-type(1)) ~  .results { --value-3: 0; }
[data-move="3"]:has(:checked:nth-of-type(2)) ~  .results { --value-3: 1; }
[data-move="3"]:has(:checked:nth-of-type(3)) ~  .results { --value-3: 2; }
[data-move="3"]:has(:checked:nth-of-type(4)) ~  .results { --value-3: 3; }
[data-move="3"]:has(:checked:nth-of-type(5)) ~  .results { --value-3: 4; }
[data-move="3"]:has(:checked:nth-of-type(6)) ~  .results { --value-3: 5; }
[data-move="3"]:has(:checked:nth-of-type(7)) ~  .results { --value-3: 6; }
[data-move="3"]:has(:checked:nth-of-type(8)) ~  .results { --value-3: 7; }
[data-move="3"]:has(:checked:nth-of-type(9)) ~  .results { --value-3: 8; }
[data-move="3"]:has(:checked:nth-of-type(10)) ~ .results { --value-3: 9; }

[data-move="4"]:has(:checked:nth-of-type(1)) ~  .results { --value-4: 0; }
[data-move="4"]:has(:checked:nth-of-type(2)) ~  .results { --value-4: 1; }
[data-move="4"]:has(:checked:nth-of-type(3)) ~  .results { --value-4: 2; }
[data-move="4"]:has(:checked:nth-of-type(4)) ~  .results { --value-4: 3; }
[data-move="4"]:has(:checked:nth-of-type(5)) ~  .results { --value-4: 4; }
[data-move="4"]:has(:checked:nth-of-type(6)) ~  .results { --value-4: 5; }
[data-move="4"]:has(:checked:nth-of-type(7)) ~  .results { --value-4: 6; }
[data-move="4"]:has(:checked:nth-of-type(8)) ~  .results { --value-4: 7; }
[data-move="4"]:has(:checked:nth-of-type(9)) ~  .results { --value-4: 8; }
[data-move="4"]:has(:checked:nth-of-type(10)) ~ .results { --value-4: 9; }

[data-move="5"]:has(:checked:nth-of-type(1)) ~  .results { --value-5: 0; }
[data-move="5"]:has(:checked:nth-of-type(2)) ~  .results { --value-5: 1; }
[data-move="5"]:has(:checked:nth-of-type(3)) ~  .results { --value-5: 2; }
[data-move="5"]:has(:checked:nth-of-type(4)) ~  .results { --value-5: 3; }
[data-move="5"]:has(:checked:nth-of-type(5)) ~  .results { --value-5: 4; }
[data-move="5"]:has(:checked:nth-of-type(6)) ~  .results { --value-5: 5; }
[data-move="5"]:has(:checked:nth-of-type(7)) ~  .results { --value-5: 6; }
[data-move="5"]:has(:checked:nth-of-type(8)) ~  .results { --value-5: 7; }
[data-move="5"]:has(:checked:nth-of-type(9)) ~  .results { --value-5: 8; }
[data-move="5"]:has(:checked:nth-of-type(10)) ~ .results { --value-5: 9; }

[data-move="6"]:has(:checked:nth-of-type(1)) ~  .results { --value-6: 0; }
[data-move="6"]:has(:checked:nth-of-type(2)) ~  .results { --value-6: 1; }
[data-move="6"]:has(:checked:nth-of-type(3)) ~  .results { --value-6: 2; }
[data-move="6"]:has(:checked:nth-of-type(4)) ~  .results { --value-6: 3; }
[data-move="6"]:has(:checked:nth-of-type(5)) ~  .results { --value-6: 4; }
[data-move="6"]:has(:checked:nth-of-type(6)) ~  .results { --value-6: 5; }
[data-move="6"]:has(:checked:nth-of-type(7)) ~  .results { --value-6: 6; }
[data-move="6"]:has(:checked:nth-of-type(8)) ~  .results { --value-6: 7; }
[data-move="6"]:has(:checked:nth-of-type(9)) ~  .results { --value-6: 8; }
[data-move="6"]:has(:checked:nth-of-type(10)) ~ .results { --value-6: 9; }

[data-move="7"]:has(:checked:nth-of-type(1)) ~  .results { --value-7: 0; }
[data-move="7"]:has(:checked:nth-of-type(2)) ~  .results { --value-7: 1; }
[data-move="7"]:has(:checked:nth-of-type(3)) ~  .results { --value-7: 2; }
[data-move="7"]:has(:checked:nth-of-type(4)) ~  .results { --value-7: 3; }
[data-move="7"]:has(:checked:nth-of-type(5)) ~  .results { --value-7: 4; }
[data-move="7"]:has(:checked:nth-of-type(6)) ~  .results { --value-7: 5; }
[data-move="7"]:has(:checked:nth-of-type(7)) ~  .results { --value-7: 6; }
[data-move="7"]:has(:checked:nth-of-type(8)) ~  .results { --value-7: 7; }
[data-move="7"]:has(:checked:nth-of-type(9)) ~  .results { --value-7: 8; }
[data-move="7"]:has(:checked:nth-of-type(10)) ~ .results { --value-7: 9; }


[data-move="1"]:has(:checked) ~ .results {
	--digit-1: calc(
		(var(--value-0, 0) * 10) +
		(var(--value-1, 0) * 1)
	);
}

[data-move="2"]:has(:checked) ~ .results {
	--digit-1: calc(
		(var(--value-0, 0) * 100) +
		(var(--value-1, 0) * 10) +
		(var(--value-2, 0) * 1)
	);
}

[data-move="3"]:has(:checked) ~ .results {
	--digit-1: calc(
		(var(--value-0, 0) * 1000) +
		(var(--value-1, 0) * 100) +
		(var(--value-2, 0) * 10) +
		(var(--value-3, 0) * 1)
	);
}

[data-move="5"]:has(:checked) ~ .results {
	--digit-2: calc(
		(var(--value-4, 0) * 10) +
		(var(--value-5, 0) * 1)
	);
}

[data-move="6"]:has(:checked) ~ .results {
	--digit-2: calc(
		(var(--value-4, 0) * 100) +
		(var(--value-5, 0) * 10) +
		(var(--value-6, 0) * 1)
	);
}

[data-move="7"]:has(:checked) ~ .results {
	--digit-2: calc(
		(var(--value-4, 0) * 1000) +
		(var(--value-5, 0) * 100) +
		(var(--value-6, 0) * 10) +
		(var(--value-7, 0) * 1)
	);
}

.results {
	--digit-1: var(--value-0, 0);
	--digit-2: var(--value-4, 0);
	counter-increment: digit-one var(--digit-1) digit-two var(--digit-2) output var(--result, 0);
}

.first::after {
	content: "first:" counter(digit-one);
}
.second::after {
	content: "second:" counter(digit-two);
}

.calculator:has(#o-plus:checked) .results {
	--operand: ' + ';
	--result: calc(var(--digit-1, 0) + (var(--digit-2, 0)));
}

.calculator:has(#o-minus:checked) .results {
	--operand: ' - ';
	--result: calc(var(--digit-1, 0) - (var(--digit-2, 0)));
}

.calculator:has(#o-divide:checked) .results {
	--operand: ' รท ';
	--result: calc((var(--digit-1, 0) / (var(--digit-2, 0))) * 100);
}

.calculator:has(#o-multiply:checked) .results {
	--operand: ' ร ';
	--result: calc(var(--digit-1, 0) * (var(--digit-2, 0)));
}

.output::after {
	content: "result:" counter(digit-one) var(--operand, " + ") counter(digit-two) " = " counter(output);
}

.final::after {
	display: none;
	content: "result:" counter(digit-one) var(--operand, " + ") counter(digit-two) " = " counter(output);
}

.calculator:has(#calculate:checked) .final::after { display: block; }

.calculator__move:first-of-type:has(:checked),
.calculator__move:not(.calculator__move:first-of-type) {
	pointer-events: none;
	opacity: 0.2;
}

.calculator:has([name=operand]:checked) [data-move="4"]:not(:has(:checked)),
.calculator__move:has(:checked) + .calculator__move:not(.calculator__move:has(:checked)) {
	pointer-events: all;
	opacity: 1;
}

/* Styles using Subgrid */
.calculator {
	aspect-ratio: 3 / 4;
	background: red;
	width: 50vmin;
	border-radius: 1rem;
	padding: 1rem;
	display: grid;
	gap: 0;
	grid-template-columns: repeat(4, 1fr);
	grid-template-rows: repeat(6, 1fr);
}

.calculator__move {
	display: grid;
	grid-template-rows: subgrid;
	grid-template-columns: subgrid;
	grid-column: 1 / -2;
	grid-row: 3 / -1;
}

.calculator__operands {
	display: grid;
	grid-template: subgrid / subgrid;
	grid-column: -2 / -1;
	grid-row: 3 / -1;
}

 /* row-start / column-start / row-end / column-end */
:is(label, input):nth-of-type(1) { grid-area: 4 / 2; }
:is(label, input):nth-of-type(2) { grid-area: 3 / 1; }
:is(label, input):nth-of-type(3) { grid-area: 3 / 2; }
:is(label, input):nth-of-type(4) { grid-area: 3 / 3; }
:is(label, input):nth-of-type(5) { grid-area: 2 / 1; }
:is(label, input):nth-of-type(6) { grid-area: 2 / 2; }
:is(label, input):nth-of-type(7) { grid-area: 2 / 3; }
:is(label, input):nth-of-type(8) { grid-area: 1 / 1; }
:is(label, input):nth-of-type(9) { grid-area: 1 / 2; }
:is(label, input):nth-of-type(10) { grid-area: 1 / 3; }


.calculator__operands :is(label, input):nth-of-type(1) { grid-area: 1 / 1; }
.calculator__operands :is(label, input):nth-of-type(2) { grid-area: 2 / 1; }
.calculator__operands :is(label, input):nth-of-type(3) { grid-area: 3 / 1; }
.calculator__operands :is(label, input):nth-of-type(4) { grid-area: 4 / 1; }

[type=reset] { grid-area: -2 / 1; z-index: 2; }
.calculator__calculate { grid-area: -2 / 3; display: grid; grid-template: subgrid / subgrid; }

.results {
	display: grid;
	grid-area: 1 / 1 / 3 / -1;
	background: black;
	color: white;
}

[type=reset],
label {
	border: 0;
	padding: 0;
	height: 100%;
	width: 100%;
	background: blue;
	border-radius: 6px;
	display: grid;
	font-size: 2rem;
	color: white;
	font-weight: bold;
	place-items: center;
}

.calculator:not(:has([name=operand]:checked)) { background: pink; }

.calculator__operands:has(:checked),
.calculator:has([name=operand]:checked) :is(.calculator__move[data-move="0"], .calculator__move[data-move="1"], .calculator__move[data-move="2"], .calculator__move[data-move="3"]),
.calculator:not(:has([name=operand]:checked)) :is(#calculate, [for=calculate]),
.calculator:not(:has([name=operand]:checked)) [data-move="3"]:has(:checked) ~ :is(.calculator__move) {
	pointer-events: none;
	opacity: 0.2;
}

.calculator__operands label { background: aqua; }
label[for=calculate] { background: orange; }
[type=reset] { background: purple; }

.calculator:has(#calculate:checked) :is(.calculator__move, .calculator__operands) {
	opacity: 0;
}