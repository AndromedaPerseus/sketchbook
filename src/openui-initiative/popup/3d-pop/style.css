@import "normalize.css" layer(normalize);
@import "open-props/style" layer(open-props);
@import "open-props/normalize" layer(open-props);
@import "open-props/colors-hsl" layer(open-props);
@import "../../../../net/experimental-web-platform/style.css";

*,
*:after,
*:before {
	box-sizing: border-box;
	transform-style: preserve-3d;
  touch-action: none;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family:  'Google Sans', sans-serif, system-ui;
}

[togglepopup] {
  position: fixed;
  bottom: 10vmin;
  left: 50%;
  transform: translateX(-50%) scale(var(--scale, 1));
  padding: var(--size-4) var(--size-8);
  background: hsl(210 60% var(--lightness, 30%));
  transition: background 0.25s, transform 0.25s;
  color: var(--gray-0);
}

[togglepopup]:hover {
  --scale: 1.1;
  --lightness: 40%;
}

[togglepopup]:active {
  --scale: 0.9;
  --lightness: 20%;
}

.popup {
  --depth: 10vmin;
  --color: hsl(280 80% 50% / 1);
  background: transparent;
	position: absolute;
	top: 50%;
  padding: 0;
	left: 50%;
  border: 0;
  transition: transform 0.25s var(--ease-elastic-4);
  /*transform-origin: 35% 100%;*/
	transform: translate3d(-50%, -50%, 100vmin)
            rotateX(-24deg) rotateY(24deg)
            /* Responsible for showing/hiding */
            translateY(calc(var(--hide, 1) * 100vmin))
            /* Parallaxing */
            rotateY(calc(var(--x, 0) * 1deg))
            rotateX(calc(var(--y, 0) * -1deg));
}

[popup]:top-layer, [popup]:top-layer::backdrop {
  --hide: 0;
}

[popup]::backdrop {
  background: hsl(0 10% 10%/ 0.35);
  opacity: calc(1 - var(--hide, 0));
  transition: opacity 0.25s;
  backdrop-filter: blur(2px);
}

.popup__text {
  opacity: 0;
  padding: var(--size-4);
  font-size: var(--font-size-fluid-2);
  font-weight: var(--font-weight-6);
  color: var(--gray-0);
}

.popup__tail {
  height: 50%;
  aspect-ratio: 1;
  position: absolute;
  top: 50%;
  left: 35%;
  transform: translate3d(-50%, -50%, -2.5vmin);
  --depth: 5vmin;
  --color: hsl(280 80% 50% / 1);
}

.popup__tail :is(.cuboid__side:nth-of-type(2), .cuboid__side:nth-of-type(4)) {
  background: transparent;
  filter: none;
}

.popup__tail .cuboid__side:nth-of-type(2):after {
  content: "";
  background: hsl(280 80% 50% / 1);
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 142%;
  transform-origin: 0 50%;
  transform: rotateY(45deg);
}
.popup__tail :is(.cuboid__side:nth-of-type(1), .cuboid__side:nth-of-type(3)) {
  --b: 0.7;
  clip-path: polygon(0 0, 100% 100%, 0 100%);
}

[popup] > .cuboid > .cuboid__side:nth-of-type(3) {
  filter: none;
}

[popup] > .cuboid {
  transform-origin: 35% 100%;
  transition: transform 0.25s;
  transform: scale(calc(1 - var(--hide, 1)));
}

[popup] .cuboid {
  position: absolute;
  inset: 0;
  font-size: var(--font-size-fluid-2);
  font-weight: var(--font-weight-6);
  color: var(--gray-0);
}

[popup] .cuboid__side {
  display: grid;
  place-items: center;
}

.hand {
  animation: wiggle 3s infinite;
  display: inline-block;
  transform-origin: 65%;
}

@keyframes wiggle {
  0%, 10%, 20%, 30%, 40%  {
    transform: rotateY(180deg) rotate(-8deg);
  }
  5%, 15%, 25%, 35%, 45%  {
    transform: rotateY(180deg) rotate(8deg);
  }
  50%, 100% {
    transform: rotateY(180deg) rotate(0);
  }
}


/* Cuboid boilerplate code */
.cuboid {
  width: 100%;
  height: 100%;
  position: relative;
}
.cuboid__side {
  background: var(--color);
  position: absolute;
  filter: brightness(var(--b));
}
.cuboid__side:nth-of-type(1) {
  --b: 1.1;
  height: var(--depth, 20vmin);
  width: 100%;
  top: 0;
  transform: translate(0, -50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(2) {
  --b: 0.9;
  height: 100%;
  width: var(--depth, 20vmin);
  top: 50%;
  right: 0;
  transform: translate(50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(3) {
  --b: 0.5;
  width: 100%;
  height: var(--depth, 20vmin);
  bottom: 0;
  transform: translate(0%, 50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(6) {
  --b: 1;
  height: 100%;
  width: var(--depth, 20vmin);
  left: 0;
  top: 50%;
  transform: translate(-50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(5) {
  --b: 0.8;
  height: 100%;
  width: 100%;
  transform: translate3d(0, 0, calc(var(--depth, 20vmin) * 0.5));
  top: 0;
  left: 0;
}
.cuboid__side:nth-of-type(4) {
  --b: 1.2;
  height: 100%;
  width: 100%;
  transform: translate3d(0, 0, calc(var(--depth, 20vmin) * -0.5)) rotateY(180deg);
  top: 0;
  left: 0;
}