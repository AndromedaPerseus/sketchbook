@import 'normalize.css' layer(normalize);

@layer normalize, base, demo;

@layer demo {
  :root {
    --ease: linear(
      0 0%,
      0.2178 2.1%,
      1.1144 8.49%,
      1.2959 10.7%,
      1.3463 11.81%,
      1.3705 12.94%,
      1.3726 13.7%,
      1.3643 14.48%,
      1.3151 16.2%,
      1.0317 21.81%,
      0.941 24.01%,
      0.8912 25.91%,
      0.8694 27.84%,
      0.8698 29.21%,
      0.8824 30.71%,
      1.0122 38.33%,
      1.0357 40.52%,
      1.046 42.71%,
      1.0416 45.7%,
      0.9961 53.26%,
      0.9839 57.54%,
      0.9853 60.71%,
      1.0012 68.14%,
      1.0056 72.24%,
      0.9981 86.66%,
      1 100%
    );
  }
  @property --scroll {
    initial-value: 0;
    inherits: true;
    syntax: '<number>';
  }
  @property --scrub {
    initial-value: 0;
    inherits: true;
    syntax: '<number>';
  }

  .scrub {
    animation: scrub linear both;
    animation-timeline: scroll(root);
  }

  @keyframes scrub {
    100% {
      --scroll: 100;
      --scrub: 100;
    }
  }

  html {
    color-scheme: dark only;
  }
  h1 {
    --velocity: calc(var(--scroll) - var(--scrub));
    transition: --scrub 0.15s ease;
    font-weight: 900;
    font-size: clamp(2rem, 8vw + 1rem, 12rem);
    text-shadow: 0 calc(var(--velocity) * 0.1px) red,
      0 calc(var(--velocity) * 0.2px) orange,
      0 calc(var(--velocity) * 0.3px) yellow,
      0 calc(var(--velocity) * 0.4px) green,
      0 calc(var(--velocity) * 0.5px) blue,
      0 calc(var(--velocity) * 0.6px) indigo,
      0 calc(var(--velocity) * 0.7px) violet;
    margin: 1rem;
  }
  main {
    height: 100vh;
    display: grid;
    place-items: center;
    align-content: end;
  }
  body {
    min-height: 200vh;
    align-content: start;
  }

  .scrub--velocity {
    position: fixed;
    top: 1rem;
    right: 1rem;
    animation-timeline: scroll();
    background: hsl(0 0% 20%);
  }
  .velocity-bar {
    background: linear-gradient(
          90deg,
          transparent calc(100% - 1px),
          hsl(0 0% 100% / 0.5) calc(100% - 1px)
        )
        0.5px 50% / 25% 75% repeat-x,
      linear-gradient(
          90deg,
          transparent calc(100% - 1px),
          hsl(0 0% 100% / 0.25) calc(100% - 1px)
        )
        0.5px 50% / 5% 50% repeat-x;
    --velocity: calc(var(--scroll) - var(--scrub));
    height: 1rem;
    transition: --scrub 0.15s ease;
    width: 10rem;
    position: relative;
    container-type: inline-size;
  }
  .velocity-bar::after {
    content: '';
    background: red;
    width: 2px;
    height: 100%;
    position: absolute;
    top: 0;
    left: calc(50% - 1px);
    translate: calc(var(--velocity) * 0.5cqi) 0;
  }

  .scrub--velocity::after {
    content: 'velocity';
    top: 120%;
    right: 0;
    position: absolute;
    color: hsl(0 0% 98%);
    font-weight: 300;
  }
}

@layer base {
  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in lch, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}
