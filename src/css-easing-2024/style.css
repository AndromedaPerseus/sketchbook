@import "normalize.css";

*,
*:after,
*:before {
	box-sizing: border-box;
}

:root {
	--delay: 0.2s;
}

body {
	display: flex;
	flex-direction: column;
	align-items: center;
	min-height: 100vh;
	font-family:  "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
}

.arena {
	--capacity: 200px;
	width: var(--capacity);
	height: var(--capacity);
	border: 2px solid black;
	container-type: size;
	display: flex;
	align-items: flex-end;
	position: relative;
}

.x {
	transform-box: fill-box;
	transform-origin: 50% 50%;
	animation: x calc(var(--duration, 2) * 1s) var(--delay) infinite linear;
}

.y {
	transform-box: fill-box;
	transform-origin: 50% 50%;
	animation: y calc(var(--duration, 2) * 1s) var(--delay) infinite var(--ease);
}

.l {
	/*stroke-dasharray: 1.025;
	stroke-dashoffset: 1.025;*/
	clip-path: inset(-50% 100% -50% 0);
	animation: draw calc(var(--duration, 2) * 1s) var(--delay) infinite linear;
}

.box {
	background: red;
	width: 10cqi;
	border-radius: 50%;
	aspect-ratio: 1;
	animation:
		animate-x calc(var(--duration, 2) * 1s) var(--delay) infinite linear,
		animate-y calc(var(--duration, 2) * 1s) var(--delay) infinite var(--ease);
	translate: calc(100cqw + 100%) 50%;
	translate: -50% 50%;
	z-index: 2;
}

:is(.x, .y, .box, .l) { animation-play-state: paused; }

.arena:hover :is(.x,.y,.box, .l) {
	animation-play-state: running;
}

@keyframes x {
	to { translate: 1px 0; }
}

@keyframes y {
	to { translate: 0 1px; }
}

@keyframes draw {
	to { clip-path: inset(-50% 0 -50% 0); }
}

@keyframes animate-x {
	to { translate: calc(100cqw - 50%) 50%; }
}
@keyframes animate-y {
	to { transform: translateY(calc(-100cqh + 0%)); }
}

.arena {
	--size: 10%;
	--line: color-mix(in lch, canvasText 10%, hsl(0 0% 100% / 0.25));
	background: linear-gradient(
				90deg,
				var(--line) 1px,
				transparent 1px var(--size)
			)
			0% 0% / var(--size) var(--size),
		linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0% 0% /
			var(--size) var(--size);
}

.graph {
	position: absolute;
	inset: 0;
	overflow: visible !important;
	scale: 1 -1;
}