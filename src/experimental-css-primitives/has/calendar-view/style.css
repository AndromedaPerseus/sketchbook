@import "normalize.css" layer(normalize);
@import "../../../../net/experimental-web-platform/style.css";

*,
*:after,
*:before {
	box-sizing: border-box;
	transition: all 0.2s;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family:  'Google Sans', sans-serif, system-ui;
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

.calendar__cell {
	background: hsl(var(--bbg) / 1);
	opacity: var(--alpha, 1);
}

.calendar__title {
	grid-column: 1 / -1;
	text-align: center;
}

.calendar__cell:has([for*="-09-"], [for*="-11-"]) {
	--alpha: 0.5;
}

.calendar__heading,
.calendar__cell {
	display: grid;
	width: 48px;
	aspect-ratio: 1;
	overflow: hidden;
	place-items: center;
	position: relative;
}

label {
	display: inline-block;
	height: 100%;
	width: 100%;
	background: hsl(var(--bg));
	position: absolute;
	border-radius: var(--radius, 0 0 0 0);
	cursor: pointer;
}

tbody {
	display: grid;
	grid-auto-flow: row;
}

tr {
	display: grid;
	grid-auto-flow: column;
}

[for*=from] {
	z-index: 2;
}

.calendar__number {
	color: hsl(var(--color, 0 0% 10%));
	display: inline-block;
	font-weight: bold;
	z-index: 4;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	pointer-events: none;
}

/* HOVER MADNESS - THESE ARE WILD AND CAN LIKELY BE EASIER... */

/* Hover logic for picking "to" */
/* All the pre-selection hovering stuff */
/* Pick all succeeding rows up to hover */
:root:has([id*=from]:checked):not(:has([id*=to]:checked)):has(.calendar__cell:hover)
tr:has([id*=from]:checked) ~
tr:not(:hover):has(~ tr:hover) .calendar__cell,
/* Pick all succeeding cells where a later row is hovered */
:root:has([id*=from]:checked):not(:has([id*=to]:checked)):has(.calendar__cell:hover)
tr:has([id*=from]:checked):has(~ tr:hover)
.calendar__cell:has(:checked) ~ .calendar__cell,
/* Pick all preceeding cells before the hover but after the "from" */
:root:has([id*=from]:checked):not(:has([id*=to]:checked)):has(.calendar__cell:hover)
.calendar__cell:has(:checked) ~ .calendar__cell:has(~ .calendar__cell:hover),
/* Pick all cells up to the hover in other rows */
:root:has([id*=from]:checked):not(:has([id*=to]:checked)):has(.calendar__cell:hover)
tr:has(:checked) ~ tr:has(:hover)
.calendar__cell:has(~ .calendar__cell:hover) {
	--bbg: 280 80% 50%;
	--alpha: 1;
	--color: 10 0% 100%;
}

/* When you have a "to" and "from" but you hover something before "to" */
/* Updating "from" */
/* All the cells succeeding the :hover in the :hovered row */
:root:has([id*=from]:checked):has([id*=to]:checked):has(.calendar__cell:hover)
tr:has(~ tr .calendar__cell > [id*=from]:checked):hover
.calendar__cell:hover ~ .calendar__cell,
/* All cells on succeeding rows that don't contain the "from" */
:root:has([id*=from]:checked):has([id*=to]:checked):has(.calendar__cell:hover)
tr:hover ~ tr:has(~ tr [id*=from]:checked)
.calendar__cell,
/* All cells preceding the "from" on the checked row */
:root:has([id*=from]:checked):has([id*=to]:checked):has(.calendar__cell:hover)
tr:hover:has([id*=from]:checked)
.calendar__cell:hover:has(~ .calendar__cell > :checked) ~
.calendar__cell:has(~ .calendar__cell > :checked),
/* Also need to select cells preceding the "from" on the checked row when another is hovered... */
:root:has([id*=from]:checked):has([id*=to]:checked):has(.calendar__cell:hover)
tr:hover ~ tr:has([id*=from]:checked)
/* .calendar__cell:hover:has(~ .calendar__cell > :checked) ~ */
.calendar__cell:has(~ .calendar__cell > :checked)
{
	--bbg: 45 100% 50%;
	--alpha: 1;
	--color: 0 0% 100%;
}

/* All the selected range goes here */
/* Cells that succeed the "from" point  and not the "to" point. Don't ask how that last line works... */
:root:has([id*=from]:checked):has([id*=to]:checked)
tr:has([id*=from]:checked)
.calendar__cell:has([id*=from]:checked) ~
.calendar__cell:has( ~ .calendar__cell > :checked):not(:hover),
/* Select all cells that come before the selected "to" in that row */
:root:has([id*=from]:checked):has([id*=to]:checked)
tr:has([id*=from]:checked) ~ tr:has(:checked)
.calendar__cell:has(~ .calendar__cell > :checked):not(:hover),
/* All rows inbetween are those that don't have checked but do have a succeeding checked */
:root:has([id*=from]:checked):has([id*=to]:checked)
tr:has([id*=from]:checked) ~ tr:not(:has(:checked)):has(~ tr .calendar__cell > :checked)
.calendar__cell:not(:hover),
/* The last piece is all cells that come after the "from" where a succeeding row has the checked */
:root:has([id*=from]:checked):has([id*=to]:checked)
tr:has([id*=from]:checked):has(~ tr .calendar__cell > :checked)
.calendar__cell:has([id*=from]:checked) ~ .calendar__cell:not(:hover)
{
	--bbg: 320 80% 56%;
	--alpha: 1;
	--color: 0 0% 100%;
}

/* Raise the "to" label once a "from" has been checked */
/* At this point you can display:none all of the "from" also */
.calendar__cell:has([id*=from]:checked) ~ .calendar__cell [for*=to],
tr:has([id*=from]:checked) ~ tr .calendar__cell [for*=to] {
	z-index: 3;
}

/* For every cell that succeeds a "to" check, don't color them */
/* :root:has([id*=from]:checked):has([id*=to]:checked) .calendar__cell:has([id*=to]:checked) ~ .calendar__cell:not(:has(:checked)),
:root:has([id*=from]:checked):has([id*=to]:checked) tr:has([id*=to]:checked) ~ tr .calendar__cell:not(:has(:checked)) {
	--bbg: transparent;
	--color: 0 0% 10%;
} */

/* Any date succeeding selection that doesn't belong to the month */
/* :root:has([id*=from]:checked):has([id*=to]:checked) .calendar__cell:has([id*=to]:checked) ~ .calendar__cell:not(:has(:checked)):has([for*="-11-"], [for*="-09-"]):not(:hover),
:root:has([id*=from]:checked):has([id*=to]:checked) tr:has([id*=to]:checked) ~ tr .calendar__cell:not(:has(:checked)):has([for*="-11-"], [for*="-09-"]):not(:hover) {
	--alpha: 0.5;
} */

/* TODO:: Only do it when :root has from and to checked or hovered */

/* When a cell is hovered */
/* :root:has([id*=from]:checked):has([id*=to]:checked) .calendar__cell:has([id*=from]:checked) ~ .calendar__cell:not(:has(:checked)):hover,
:root:has([id*=from]:checked):has([id*=to]:checked) tr:has([id*=from]:checked) ~ tr .calendar__cell:not(:has(:checked)):hover,
:root:has([id*=from]:checked):has(.calendar__cell:hover) tr:has([id*=from]:checked) ~ tr:not(:has(tr:hover)) .calendar__cell:hover,
:root:has([id*=from]:checked):not(:has([id*=to]:checked)):has(.calendar__cell:hover) tr:has([id*=from]:checked) ~ tr:not(:has(tr:hover)) .calendar__cell:hover, */
.calendar__cell:hover {
	--bbg: 210 80% 50%;
	--alpha: 1;
	--color: 0 0% 100%;
}

/* When a cell has checked content */
.calendar__cell:has(:checked) {
	--bbg: 140 80% 20%;
	--alpha: 1;
	--color: 0 0% 100%;
}

/* Border radius for the different edges based on opener or closer */
/* .calendar__cell:has([id*=from]:checked) {
	--radius: 50% 0 0 50%;
}
.calendar__cell:has([id*=to]:checked) {
	--radius: 0 50% 50% 0;
} */