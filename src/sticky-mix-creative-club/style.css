@import "normalize.css";

@font-face {
  font-family: "Geist Sans";
  src: url("https://assets.codepen.io/605876/GeistVF.ttf") format("truetype");
}

:root {
	--text: hsl(0 0% 0%);
	--white: hsl(0 0% 100%);
	--font-size: clamp(2rem, 8vw + 1rem, 10rem);
	--padding: 15vh;
	--nav: 80px;
	--fixer: hsl(25 90% 50%);
	--clipped: hsl(310 80% 70%);
	--marge: hsl(250 80% 70%);
}

*,
*:after,
*:before {
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	font-family:  "Geist Sans", "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
	font-weight: 60;
}

nav {
	align-items: center;
	background: var(--white);
	display: flex;
	height: var(--nav);
	position: fixed;
	top: 0;
	width: 100%;
	z-index: 9999;
}

a {
	color: var(--text);
}

a svg {
	width: 48px;
}

.content {
	margin: 0 auto;
	max-width: 100%;
	width: 80ch;
}

section {
	background: var(--text);
	min-height: 100vh;
}

.container div section:first-of-type {
	background: var(--text);
	position: sticky;
	top: calc(var(--padding) + var(--nav));
	margin-top: var(--padding);
}

nav div,
main div {
	width: 100vw;
	background: var(--white);
}

header {
	position: sticky;
	top: calc(var(--padding) + var(--nav));
	color: var(--white);
	margin: 0;
	text-transform: uppercase;
	text-align: center;
	display: flex;
	justify-content: center;
	align-items: end;
	margin: calc(var(--padding) + var(--nav)) 0 0 0;
	z-index: 2;
	width: 100%;
}

:root {
	scroll-margin-top: 50vh;
}

h1 {
	font-size: var(--font-size);
	line-height: 0.75;
	margin: 0;
	font-weight: 120;
	transition: color 0.5s;
}

h1:not(:first-of-type) {
	position: absolute;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
}

main > section {
	background: var(--white);
	display: grid;
	place-items: center;
}

main > section .content {
	padding: 0 1rem;
}

p {
	font-size: 2rem;
}

section {
	position: relative;
	overflow: hidden;
}

img {
	width: 100%;
	height: 100vh;
	object-fit: cover;
	filter: contrast(0.75) grayscale(1);
}

.clipper > header,
.container > header {
	position: fixed;
	top: 0;
	z-index: 0;
}

.container > header h1 {
	color: var(--text);
}

main {
	transition: clip-path 0.5s;
	clip-path: inset(calc(var(--nav) + var(--font-size) + var(--padding) + var(--padding)) 0 0 0);
}

footer {
	text-align: center;
	padding: 2rem 1rem;
}

.controls {
	position: fixed;
	z-index: 99999;
	right: 1rem;
	top: 1rem;
	display: inline-grid;
	grid-template-columns: 1fr auto;
	padding: 1rem;
	gap: 1rem;
	border: 1px solid black;
	border-radius: 12px;
	transition: background 0.2s;
	background: white;
}

.controls:hover {
	background: hsl(0 0% 95%);
}

label::after {
	content: "";
	position: absolute;
	inset: 0;
	cursor: pointer;
}

[type=checkbox] {
	accent-color: black;
}

body {
	background: hsl(0 0% 2%);
	height: 100vh;
	width: 100vw;
	overflow: hidden;
}

body::before {
	--line: hsl(0 0% 95% / 0.15);
	content: "";
	height: 100vh;
	width: 100vw;
	position: fixed;
	background:
		linear-gradient(90deg, var(--line) 1px, transparent 1px 10vmin) 0 -5vmin / 10vmin 10vmin,
		linear-gradient(var(--line) 1px, transparent 1px 10vmin) 0 -5vmin / 10vmin 10vmin;
	mask: linear-gradient(-15deg, transparent 30%, white);
	top: 0;
	z-index: -1;
	transform: translate3d(0, 0, -100vmin);
}

.slides {
	transition: scale 0.5s, transform 0.5s;
	box-shadow: 0 5vh 10vh -5vh black;
	transform-style: preserve-3d;
}

:root:has(#explode:checked) .slides {
	scale: 0.45;
	transform-origin: 50% 50%;
	transform: rotateX(-24deg) rotateY(-55deg) translate3d(0, 0, 20vmin);
}

:root:has(#explode:checked) .clipper > header h1,
:root:has(#explode:checked) .container > header h1 {
	color: var(--fixer);
}

:root:has(#explode:checked) .container main {
	background: linear-gradient(transparent 50%, white 50%);
	position: relative;
	clip-path: inset(0 0 0 0);
/*	mask: linear-gradient(hsl(0 0% 100% / 0.5) calc(var(--nav) + var(--font-size) + var(--padding) + var(--padding)), white calc(var(--nav) + var(--font-size) + var(--padding) + var(--padding)));*/
}

:root:has(#explode:checked) .container main section {
	clip-path: inset(calc((var(--nav) + var(--font-size) + var(--padding) + var(--padding)) * 0.5) 0 0 0);
}
:root:has(#explode:checked) .container main > div {
	background: transparent;
	clip-path: inset(calc((var(--nav) + var(--font-size) + var(--padding) + var(--padding)) * 1) 0 0 0);
}

:root:has(#explode:checked) .container main::after {
	content: "Clipped";
	font-weight: 120;
	text-transform: uppercase;
	display: grid;
	place-items: center;
	position: absolute;
	font-size: var(--font-size);
	color: var(--clipped);
	top: 0;
	left: 0;
	right: 0;
	height: calc(var(--nav) + var(--font-size) + var(--padding) + var(--padding));
	background: transparent;
	z-index: 2;
	border: 2vmin dashed var(--clipped);
	box-sizing: border-box;
}
.clipper::before,
:root:has(#explode:checked) .container::before {
	text-transform: uppercase;
	font-weight: 120;
	content: "Margin";
	display: grid;
	place-items: center;
	font-size: var(--font-size);
	color: var(--marge);
	top: 0;
	left: 0;
	right: 0;
	position: absolute;
	height: calc(var(--nav) + var(--padding));
	border: 2vmin dashed var(--marge);
	z-index: ;
}
.clipper::before {
	opacity: 0.5;
}

.captioner {
	position: absolute;
	inset: 0;
	transform-style: preserve-3d;
	pointer-events: none;
}

.container {
	width: 100vw;
	height: 100vh;
	overflow: auto;
	background: white;
}

.clipper {
	width: 100vw;
	height: 100vh;
	outline: hsl(0 0% 40%) 2px solid;
	position: absolute;
	inset: 0;
	transform: translate3d(0, 0, -40vmin);
	transform-style: preserve-3d;
}

.captioner .caption,
.clipper .caption {
	transform-style: preserve-3d;
	position: absolute;
	top: 5%;
	left: 100%;
	color: var(--white);
	font-size: calc(var(--font-size) * 0.5);
	white-space: nowrap;
	transform: translate(50%, -50%) rotateY(55deg) rotateX(24deg);
}

.captioner .caption {
/*	transform: unset;*/
}

.captioner .caption--main {
	top: 45%;
}

.captioner .caption--sticky {
	top: 45%;
	left: 0;
	translate: -200% 0;
}

.clipper nav,
.clipper main {
	display: none;
}

.caption {
	font-weight: 20;
}