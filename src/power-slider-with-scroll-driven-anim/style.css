@import "normalize.css" layer(https://unpkg.com/normalize.css);

@font-face {
  font-family: "Geist Sans";
  src: url("https://assets.codepen.io/605876/GeistVF.ttf") format("truetype");
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  display: flex;
  place-items: center;
  min-height: 100vh;
  font-family:  "Geist Sans", "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
  background: hsl(0 0% 12%);
}

:root {
  --width: 180px;
  --glow: var(--hue, 24) 90% 60%;
  --accent: var(--hue, 24) 100% calc((60 + ((var(--value, 0) / 100) * 40)) * 1%);
  --outset: -.5rem;
  --thickness: 4px;
}

@layer foundation {
  .control {
    position: relative;
    display: grid;
    place-items: center;
    border-radius: 100px;
    margin: 0 auto;
  }

  /**
   * Backdrop line. Purely for decoration. Could just be a border tbh.
   * */
  .control::before {
  	content: "";
  	inset: var(--outset);
  	border: var(--thickness) solid black;
  	border-radius: 100px;
  	position: absolute;
  	pointer-events: none;
  }

	/* The beams */
  .control__beams {
  	position: absolute;
  	inset: var(--outset);
  	pointer-events: none;
  	container-type: size;
  }

 	.control__beam-track {
 		position: absolute;
 		border-radius: 100px;
 		inset: 0 0 0 0;
 	}

 	.control__beam-track:last-of-type {
 		filter: brightness(1.5) blur(10px);
 		box-shadow: 0 0 100px transparent;
 	}

 	.control__beam-track::after {
 		content: "";
 		border: var(--thickness) solid hsl(var(--accent) / calc(0.5 + (var(--value, 0) / 100)));
 		position: absolute;
 		border-radius: 100px;
 		inset: 0;
 		z-index: 2;
 		clip-path: inset(
 			0
 			/**
 			 * 100% -
 			 * start: 50cqh * 1%
 			 * middle: 100% - 100cqh
 			 * */
 			calc(
 				100% -
 					(50cqh * clamp(0, var(--value, 0), 1)) -
 					((100% - 100cqh) * (var(--value) / 100)) -
 					((50cqh) * clamp(0, var(--value, 0) - 99, 1))
 			)
 			0
 			0);
 		box-shadow: 0 0 100px transparent;
 		transition: clip-path var(--update);
 	}

  .sr-only {
  	position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border-width: 0;
  }

  .control:focus-within,
  .control:hover {
    --active: 1;
  }

  [type="range"] {
    width: var(--width);
    opacity: 0;
    height: 60px;
  }

  [type="range"]:hover {
    cursor: -webkit-grab;
  }
  [type="range"]:active {
    cursor: -webkit-grabbing;
  }

  [type=range]:focus-visible {
    outline-offset: 0.25rem;
    outline-color: transparent;
  }

  [type="range"]::-webkit-slider-thumb {
    appearance: none;
    -webkit-appearance: none;
    height: 120px;
    width: 40px;
    margin-top: 0px;
	  opacity: 1;
	}
	[type="range"]::-webkit-slider-runnable-track {
  	-webkit-appearance: none;
	  height: 120px;
	  background: hsl(10 80% 50% / 0.5);
	  margin-top: -60px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
	  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; 
	}
	[type=range]::-moz-range-track {
	  height: 120px;
	  background: hsl(10 80% 50% / 0.5);
	  margin-top: -60px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
	  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; 
	}
}


@layer scrolls {
  @property --value {
    initial-value: 0;
    syntax: '<integer>';
    inherits: true;
  }

  @keyframes sync {
    to { --value: 100; }
  }

  [type=range] {
    overflow: hidden;
    touch-action: none;
    border: 0;
    padding: 0;
    margin: 0;
  }

  .control {
    animation: sync both linear reverse;
    animation-timeline: --thumb;
    animation-range: contain;
  }

  .control__track {
  	height: 100%;
  	width: 100%;
  	border-radius: 100px;
  	position: absolute;
  	bottom: 0;
  	pointer-events: none;
		background: hsl(0 0% 8%);
		box-shadow:
			0 -2px 10px 0 hsl(210 10% 0% / 0.5) inset,
			0 2px 10px 0 hsl(210 10% 0% / 0.65) inset,
		  0 -1px inset hsl(0 0% 100% / 0.5),
			0 0 10px inset black;
  }

  .control__indicator {
  	height: 100%;
		aspect-ratio: 1;
		border-radius: 50%;
  	position: absolute;
  	top: 50%;
  	left:calc(var(--value, 0) * 1%);
  	z-index: 2;
  	translate: calc(var(--value, 0) * -1%) -50%;
  	transition: left var(--update), translate var(--update);
  	display: grid;
  	place-items: center;
  }

  .control__thumb {
 		width: calc(100% - 14px);
 		aspect-ratio: 1;
 		border-radius: 50%;
 		position: relative;
 	}

  .control__thumb::before {
  	content: "";
  	position: absolute;
  	inset: 0;
  	border-radius: 50%;
  	background: hsl(0 0% 16%);
  	box-shadow:
  		0 2px 4px 0px inset hsl(0 0% 100% / 0.5),
  		-2px 0 4px 0 inset hsl(var(--accent) / calc( (var(--value, 0) - 99) * 1)),
      2px 0 6px -2px inset hsl(var(--accent) / calc(var(--value, 0) / 100)),
      2px 0 6px -2px inset hsl(var(--accent) / calc(var(--value, 0) / 100));
    transition: box-shadow var(--update);
  }

  .control__thumb::after {
  	content: "";
  	position: absolute;
  	height: 20%;
  	aspect-ratio: 1;
  	border-radius: 50%;
  	top: 50%;
  	left: 50%;
  	translate: -50% -50%;
  	background: hsl(var(--accent) / calc(0.5 + (var(--value, 0) / 100)));
  	box-shadow: 0 0 calc((var(--value, 0) / 100) * 10px) calc((var(--value, 0) / 100) * 4px) hsl(var(--accent) / calc(0.5 + (var(--value, 0) / 100)));
  }

  :root {
    --update: 0.1s;
    timeline-scope: --thumb;
  }

  @supports(animation-timeline: scroll()) {
	  :root {
	    --update: 0.1s;
	    timeline-scope: --thumb;
	  }

	  [type="range"]::-webkit-slider-thumb {
	    view-timeline-name: --thumb;
	    view-timeline-axis: inline;
	  }
  }
}


/* Socials stuff */
.x-link, .bear-link {
	color: hsl(0 0% 100%);
	position: fixed;
	bottom: 1rem;
	left: 1rem;
	width: 48px;
	aspect-ratio: 1;
	display: grid;
	place-items: center;
	opacity: 0.8;
}

.bear-link {
	bottom: unset;
	top: 1rem;
}

:where(.x-link, .bear-link):is(:hover, :focus-visible) {
	opacity: 1;
}
.bear-link svg {
	width: 75%;
}
.x-link svg {
	width: 50%;
}