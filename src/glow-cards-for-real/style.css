@import "normalize.css";

@font-face {
  font-family: "Geist Sans";
  src: url("https://assets.codepen.io/605876/GeistVF.ttf") format("truetype");
}

*,
*:after,
*:before {
	box-sizing: border-box;
  transform-style: preserve-3d;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;;
	font-family:  "Geist Sans", "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
}

* {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  display: grid;
  place-items: center;
  background-color: hsl(0 0% 0%);
  color: hsl(0 0% 90%);
  font-weight: 60;
}

body::before {
	content: "";
  background-image: url("https://assets.codepen.io/605876/code-icon-bg.svg");
  background-position: calc(var(--xp) * -50px) calc(var(--yp) * -50px);
  position: fixed;
  inset: 0;
  filter: grayscale(1);
  opacity: 0.25;
}

/* Glow specific styles */
[data-glow] {
	--border: var(--border-width, 2px);
	--size: var(--spotlight, 150px);
	--hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));
  --glow-opacity: 0.1;
  background: radial-gradient(
    var(--size) var(--size) at
    calc(var(--x, 0) * 1px)
    calc(var(--y, 0) * 1px),
    hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--glow-opacity, 0.1)), transparent
  ), var(--backdrop, transparent);
  background-attachment: fixed;
  border: var(--border) solid hsl(0 0% 100% / 0.1);
  position: relative;
}

[data-glow]:is(a, button) {
  --glow-opacity: 0.25;
	border: var(--border) solid transparent;
}

[data-glow]::before,
[data-glow]::after {
  pointer-events: none;
  content: "";
  position: absolute;
  inset: calc(var(--border) * -1);
  border: var(--border) solid transparent;
  border-radius: var(--radius);
  background-attachment: fixed;
  background-size: calc(100% + (2 * var(--border))) calc(100% + (2 * var(--border)));
  background-repeat: no-repeat;
  background-position: 50% 50%;
  mask:
    linear-gradient(transparent, transparent),
    linear-gradient(white, white);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
}

[data-glow]::before {
  background-image: radial-gradient(
    calc(var(--size) * 0.75) calc(var(--size) * 0.75) at
    calc(var(--x, 0) * 1px)
    calc(var(--y, 0) * 1px),
    hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 50) * 1%) / 1), transparent 100%
  );
  z-index: 2;
  filter: brightness(2);
}
[data-glow]::after {
  background-image: radial-gradient(
    calc(var(--size) * 0.5) calc(var(--size) * 0.5) at
    calc(var(--x, 0) * 1px)
    calc(var(--y, 0) * 1px),
    hsl(0 100% 100% / 1), transparent 100%
  );
  z-index: 2;
}

[data-glow] [data-glow] {
  position: absolute;
  inset: 0;
}

[data-glow] > [data-glow]:not(:is(button, a)) {
	border-radius: 16px;
	border-width: calc(var(--border) * 20);
	filter: brightness(1) blur(calc(var(--border) * 20));
	background: none;
	pointer-events: none;
}

[data-glow] > [data-glow]:not(:is(button, a))::before {
  border-width: calc(var(--border) * 10);
  inset: calc(var(--border) * -10);
}

[data-glow] [data-glow]:not(:is(a, button)) {
	border: none;
}

[data-glow] :is(a, button) {
  border-radius: 12px;
  border: var(--border) solid transparent;
}
[data-glow] :is(a, button) [data-glow] {
  background: none;
}
[data-glow] :is(a, button) [data-glow]::before {
  inset: calc(var(--border) * -1);
  border-width: calc(var(--border) * 1);
}

article {
  --backdrop: hsl(0 0% 60% / 0.15);
  --radius: 12px;
  aspect-ratio: 3 / 4;
  border-radius: var(--radius);
  width: 240px;
  position: relative;
	grid-template-rows: 1fr auto;
  box-shadow: 0 1rem 2rem -1rem black;
  padding: 1rem;
  display: grid;
  gap: 1rem;
  backdrop-filter: blur(5px);
}
main {
  display: flex;
  gap: 2rem;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  width: 120ch;
  max-width: calc(100vw - 2rem);
}
article a {
  background: hsl(0 0% 0%);
	display: inline-block;
	color: white;
	text-decoration: none;
	font-weight: 140;
	text-align: center;
	padding: 0.75rem 1.5rem;
}
h2 {
	font-weight: 100;
  font-size: 1.5rem;
  margin: 0;
}
.card__content span {
  font-size: 0.875rem;
  font-weight: 120;
  opacity: 0.5;
}
.card__content {
  color: hsl(0 0% 70%);
  display: grid;
  grid-template-rows: auto 1fr auto;
}

.card__content div {
  position: relative;
  display: grid;
  align-items: center;
}
.card__content svg {
  width: 80px;
}
.card__content div svg:not(:nth-of-type(1)) {
  position: absolute;
  top: 50%;
  left: 0;
  translate: calc(var(--index) * 40%) -50%;
  scale: calc(1 - (var(--index) * 0.2));
  z-index: calc(4 - var(--index));
  opacity: calc(4 / (2 * (var(--index) * 10)));
}
.card__content svg:nth-of-type(2) {
  --index: 1;
}
.card__content svg:nth-of-type(3) {
  --index: 2;
}
.card__content svg:nth-of-type(4) {
  --index: 3;
}

[data-explode] main {
  transition: transform 1s;
  transform: translate3d(0, 0, 100vmin) rotateX(-24deg) rotateY(-40deg);
}

[data-explode] [data-glow] {
  background: radial-gradient(
    var(--size) var(--size) at
    calc((var(--x, 0) - var(--left, 0)) * 1px)
    calc((var(--y, 0) - var(--top, 0)) * 1px),
    hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--glow-opacity, 0.1)), transparent
  ), var(--backdrop, transparent);
}
[data-explode] [data-glow]::before {
  background-image: radial-gradient(
    calc(var(--size) * 0.75) calc(var(--size) * 0.75) at
    calc((var(--x, 0) - var(--left, 0)) * 1px)
    calc((var(--y, 0) - var(--top, 0)) * 1px),
    hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 50) * 1%) 1), transparent 100%
  );
  z-index: 2;
  filter: brightness(2);
}
[data-explode] [data-glow]::after {
  background-image: radial-gradient(
    calc(var(--size) * 0.5) calc(var(--size) * 0.5) at
    calc((var(--x, 0) - var(--left, 0)) * 1px)
    calc((var(--y, 0) - var(--top, 0)) * 1px),
    hsl(0 100% 100% / 1), transparent 100%
  );
  z-index: 2;
}


.dg.ac {
  transform: translate3d(0, 0, 200vmin);
}