/* @import url('https://unpkg.com/normalize.css') layer(normalize); */

@layer normalize, base, visit;

@layer visit {
  dialog {
    --present: 0;
    opacity: var(--present);
    filter: blur(4px * (1 - var(--present))));
    width: 40ch;
    min-height: 100px;
    transition: display 1s allow-discrete, overlay 1s allow-discrete, opacity 0.5s, filter 1s;
  }
  dialog[open] {
    --present: 1;
  }
  @starting-style {
    dialog[open] {
      --present: 0;
    }
  }
}

@layer base {
  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
    color: canvasText;
  }
  html {
    color-scheme: light only;
  }
  @media (prefers-color-scheme: dark) {
    html {
      color-scheme: dark only;
    }
  }

  body::before {
    --line: color-mix(in lch, canvasText 25%, transparent);
    --size: 40px;
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        0 -5vmin / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0 -5vmin / var(
          --size
        ) var(--size);
    mask: linear-gradient(-15deg, transparent 60%, white);
    top: 0;
    z-index: -1;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }
  .bear-link svg {
    width: 75%;
  }

  body > button {
    width: 48px;
    aspect-ratio: 1;
    position: fixed;
    top: 1rem;
    right: 1rem;
    border-radius: 6px;
    border: 0;
    background: transparent;
    color: color-mix(in lch, canvasText, canvas 25%);
    cursor: pointer;
    background: color-mix(
      in lch,
      canvas,
      canvasText calc(var(--intent, 0) * 15%)
    );
    transition: background 0.25s linear;
  }

  button:has(svg) {
    padding: 0;
    display: grid;
    place-items: center;
  }

  button svg {
    width: 75%;
    rotate: calc(var(--intent, 0) * 360deg);
    transition: rotate 0.25s linear;
  }

  button:is(:hover, :focus-visible) {
    --intent: 1;
  }
}
