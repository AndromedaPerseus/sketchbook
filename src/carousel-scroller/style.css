@import "normalize.css";

html {
	color-scheme: light only;
}

[data-dark="true"] {
	color-scheme: dark only;
}

*,
*:after,
*:before {
	box-sizing: border-box;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family:  "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
	overflow: hidden;
}

body::before {
	--size: 60px;
	--line: color-mix(in lch, canvasText 35%, hsl(0 0% 100% / 0.25));
	content: '';
	height: 100vh;
	width: 100vw;
	position: fixed;
	background: linear-gradient(
				90deg,
				var(--line) 1px,
				transparent 1px var(--size)
			)
			50% 50% / var(--size) var(--size),
		linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
			var(--size) var(--size);
	mask: linear-gradient(-25deg, transparent 65%, white);
	top: 0;
	transform-style: flat;
	pointer-events: none;
	z-index: -1;
}

main {
	transform-style: preserve-3d;
	position: relative;
	transition: scale 0.2s;
	height: 100vh;
	display: grid;
	place-items: center;
	width: 100%;
	perspective: 2000px;
}

.container {
	--scroll-padding: 2px;
	--inner-angle: calc((360 / var(--total)) * 1deg);
	--character-width: clamp(100px, 10vmin, 8rem);
	--scroll-buff: calc(var(--character-width) * 4);
	--gap: calc(var(--character-width) * var(--gap-efficient, 0.1));
	--radius: calc(((var(--character-width) + var(--gap)) / sin(var(--inner-angle))) * -1);
	position: relative;
	width: 100%;
	height: 100%;
	overflow: auto;
}

ul {
	list-style-type: none;
	padding: 0;
	margin: 0;
	display: grid;
}

img {
	border-radius: 12px;
	width: 100%;
	height: 100%;
	background-color: color-mix(in lch, canvasText 25%, canvas);
}

.bear-link {
	color: canvasText;
	position: fixed;
	bottom: 1rem;
	left: 1rem;
	width: 48px;
	aspect-ratio: 1;
	display: grid;
	place-items: center;
	opacity: 0.8;
}

:where(.x-link, .bear-link):is(:hover, :focus-visible) {
	opacity: 1;
}
.bear-link svg {
	width: 75%;
}

.carousel {
	width: var(--character-width);
	height: var(--character-width);
	padding: 0;
	position: absolute;
	left: 50%;
	top: 50%;
	translate: -50% -50%;
	background: hsl(280 80% 50% / 0.5);
	transform-style: preserve-3d;
	transform: translate3d(0, 0, var(--radius)) rotateY(0deg) rotateX(0deg);
}

.carousel li {
	position: absolute;
	outline: 2px dashed hotpink;
	height: var(--character-width);
	width: var(--character-width);
	top: 50%;
	left: 50%;
	backface-visibility: hidden;
	transform:
	  translate(-50%, -50%)
	  rotateY(calc((var(--inner-angle) * var(--index))))
	  translate3d(0, 0, calc(var(--radius) * -1));
}

.controller {
	display: flex;
	overflow: auto;
	width: 100%;
	height: 100%;
	scroll-snap-type: x mandatory;
	scroll-timeline: --scroller inline;
	align-items: center;
	padding-inline: calc((50vw + var(--scroll-padding)) - (var(--scroll-buff) * 0.5));
}

.controller li {
	height: var(--scroll-buff);
	width: var(--scroll-buff);
	aspect-ratio: 1;
	scroll-snap-align: center;
	view-timeline: --item inline;
	outline: 2px dashed purple;
}

@keyframes brighten {
	50% {
		filter: saturate(1) brightness(1.25);
	}
}

.carousel-container {
	height: 100%;
	width: 100%;
	mask: linear-gradient(90deg, transparent 0 calc(50% - 200px), white calc(50% - 100px) calc(50% + 100px), transparent calc(50% + 200px) 100%);
	pointer-events: none;
	position: absolute;
	inset: 0;
	transform-style: preserve-3d;
	perspective: 800px;
}

.carousel {
	animation: carousel 5s infinite linear;
}


@keyframes carousel {
	to {
		transform: translate3d(0, 0, var(--radius)) rotateY(-360deg);
	}
}

.carousel {
	animation: carousel both linear;
	animation-timeline: --controller;
	animation-range: var(--scroll-padding) calc(100% - var(--scroll-padding));
}

.carousel li {
	filter: saturate(0.75) brightness(0.75);
	animation: highlight both linear;
	animation-timeline: var(--scoped);
	animation-range: cover calc(50% - var(--character-width)) cover calc(50% + var(--character-width));
}

@keyframes highlight {
	50% {
		filter: saturate(1.25) brightness(1.25);
	}
}

.carousel li:first-of-type {
	animation: highlight-in both linear, highlight-out both linear;
	animation-timeline: var(--scoped);
	animation-range: cover calc(50% - var(--character-width)) cover 50%, cover 50% cover calc(50% + var(--character-width));
}

@keyframes highlight-in {
	to {
		filter: saturate(1.25) brightness(1.25);
	}
}
@keyframes highlight-out {
	from {
		filter: saturate(1.25) brightness(1.25);
	}
}

@keyframes carousel {
	to {
/*		transform: translate3d(0, 0, var(--radius)) rotateY(calc(-360deg + ((360 / var(--total)) * 1deg)));*/
		transform: translate3d(0, 0, var(--radius)) rotateY(-360deg);
	}
}

div.tp-lblv_v {
	flex-shrink: 1;
	width: auto;
}