@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');
@import 'normalize.css' layer(normalize);

@layer normalize, base, demo;

@layer demo {
  @property --hue {
    initial-value: 210;
    syntax: '<number>';
    inherits: true;
  }

  @counter-style pad-example {
    system: extends decimal;
    prefix: '#';
    suffix: ': ';
    pad: 4 '0';
  }

  ul {
    list-style: pad-example;
  }
  /* radial-gradient(150% 100% at 50% 0, canvas, #0000) 50% 0 / 100%
        24px no-repeat local, */

  [data-debug='true'][data-indicate='true'] ul {
    --shadow: red;
    --cover: hsl(210 80% 50%);
  }

  [data-indicate='true'] ul {
    --cover: canvas;
    --mixed: color-mix(in lch, canvasText, canvas 65%);
    --shadow: light-dark(var(--mixed), black);
    --size: 40px;
    background: linear-gradient(var(--cover), #0000) 50% 0 / 100% var(--size)
        no-repeat local,
      radial-gradient(120% 100% at 50% -10%, var(--shadow) 0%, #0000 55%) 50% 0 /
        100% var(--size) no-repeat scroll,
      linear-gradient(#0000, var(--cover)) 50% 100% / 100% var(--size) no-repeat
        local,
      radial-gradient(120% 100% at 50% 110%, var(--shadow) 0%, #0000 55%) 50%
        100% / 100% var(--size) no-repeat scroll;
  }

  li::marker {
    color: color-mix(in lch, canvasText, #0000);
  }

  ul {
    width: 300px;
    resize: vertical;
    overflow: auto;
    min-height: 200px;
    max-height: 80vh;
    height: 360px;
    padding: 0 1rem;
    margin: 0;
    list-style-position: inside;
    display: flex;
    flex-direction: column;
    scrollbar-width: thin;
    gap: 0.5rem;
    font-family: 'Roboto Mono', monospace;
    scrollbar-color: hsl(var(--hue) 90% 80%) transparent;
    animation: hue-rotate both linear;
    animation-timeline: scroll(self);
  }

  @keyframes hue-rotate {
    to {
      --hue: 360;
    }
  }

  li {
    padding: 0.5rem 1rem;
  }

  [data-debug='true'] ul {
    outline: 4px dashed red;
    outline-offset: 4px;
  }

  h1 {
    --font-level: 7.5;
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    text-align: right;
    text-wrap: balance;
    margin: 0;
    line-height: 0.8;
    opacity: 0.2;
    pointer-events: none;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 22;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }
  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  html {
    color-scheme: light only;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in lch, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}
