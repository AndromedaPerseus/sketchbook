*,
*:after,
*:before {
	box-sizing: border-box;
}

body {
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family:  'Google Sans', sans-serif, system-ui;
}

.blocks {
	display: grid;
	grid-template-columns: repeat(var(--blocks, 0), auto);
}

.block {
	width: 5vmin;
	aspect-ratio: 1;
	background: var(--blue-1);
	display: grid;
	place-items: center;
	z-index: var(--index);
}

.block__item {
	width: 50%;
	aspect-ratio: 1;
	border-radius: 50%;
	background: var(--bg), var(--gray-0);
	transition: all 0.1s ease;
	overflow: hidden;
}
.blocks:not(.blocks--hover) .block__item {
	transform: translateY(calc(var(--lerp, 0) * -300%)) scale(calc(1 + (var(--lerp, 0) * 2)));
}

.blocks--hover .block .block__item {
	transform: translateY(calc(var(--active-lerp, 0) * -300%)) scale(calc(1 + (var(--active-lerp, 0) * 2)));
}

.blocks--hover .block:hover {
	z-index: var(--blocks);
}
.blocks--hover .block:has(+ .block:hover),
.blocks--hover .block:hover + .block {
	z-index: calc(var(--blocks) - 1);
}

.blocks--hover .block:hover .block__item {
	--active-lerp: var(--lerp-0);
}

.blocks--hover .block:has(+ .block:hover) .block__item,
.blocks--hover .block:hover + .block .block__item {
	--active-lerp: var(--lerp-1);
}

.blocks--hover .block:has(+ .block:not(:hover) + .block:hover) .block__item,
.blocks--hover .block:hover + .block:not(:hover) + .block .block__item {
	--active-lerp: var(--lerp-2);
}

.block__item:after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 75%;
	aspect-ratio: 1;
	border-left: 0.2vmin solid hsl(0 0% 100% / 0.5);
	border-radius: 50%;
	transform: translate(-50%, -50%) rotate(45deg);
}